<!-- /sections/search.liquid -->


{%- liquid
  assign has_filters = false
  if search.filters != empty and section.settings.show_filters
    assign has_filters = true
  endif

  assign types = search.types | join: ',' | url_encode
  assign types = 'type=' | append: types

  assign accordion_initial_state = 'accordion-is-open'
  assign accordion_open_boolean = true
  if section.settings.collapse_filters
    # no class means the accordion is closed
    assign accordion_initial_state = ''
    # accordion_open_boolean is used to set aria-expanded and
    # match js logic for 'display: none' on accordion body elements
    # which are non-adjacent siblings that cannot easily be styled with CSS
    assign accordion_open_boolean = false
  endif
-%}

<section class="page-search {{ section.settings.width }} section-padding"
  data-section-type="search-page"
  data-section-id="{{ section.id }}"
  style="--PT: {{ section.settings.padding_top }}px; --PB: {{ section.settings.padding_bottom }}px;">
  <div class="search__page__heading">
    {% render 'search-bar' %}

    {%- if search.terms.size > 0 -%}
      <div class="search__page__query note">
        <p>
          {%- if search.results_count > 0 -%}
            {{ 'general.search.results_for' | t }} <span class="strong">{{ search.terms | escape }}</span>
          {%- else -%}
            {{ 'general.search.no_results_for' | t }} <span class="strong">{{ search.terms | escape }}</span>
          {%- endif -%}
        </p>
      </div>
    {%- endif -%}
  </div>

  {% if search.performed %}
    {%- if has_filters -%}
      {%- assign filter_count = 0 -%}
      {%- capture filter_clears -%}
        {%- for filter in search.filters -%}
          {%- if filter.type == "price_range" -%}
            {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
              {%- assign filter_count = filter_count | plus: 1 -%}
              <a class="active__filters__remove" href="{{ filter.url_to_remove }}" data-filter-update-url>
                {%- assign min_value = filter.min_value.value | default: 0 -%}
                {%- assign max_value = filter.max_value.value | default: filter.range_max -%}
                {{ min_value | money_without_trailing_zeros }} - {{ max_value | money_without_trailing_zeros }} X
              </a>
            {%- endif -%}
          {%- else -%}
            {%- for filter_value in filter.active_values -%}
              {%- assign filter_count = filter_count | plus: 1 -%}
              <a class="active__filters__remove" href="{{ filter_value.url_to_remove }}" data-filter-update-url>
                {{ filter_value.label }} <span class="filter__x">X</span>
              </a>
            {%- endfor -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endcapture -%}

      <nav class="collection__nav" data-collection-tools>
        <div class="collection__nav__buttons">
          {% if filter_count > 0 %}
            {% capture current_filters_count %}
              <div class="badge">{{ filter_count }}</div>
            {% endcapture %}
          {% endif %}

          <button class="collection__filters__toggle filters--default-visible drawer--visible" data-filters-toggle="filters">
            <span class="hide-filters">{{ 'collections.sidebar.hide_filters' | t }}</span>
            <span class="show-filters">{{ 'collections.sidebar.filter' | t }}</span>
            <span data-active-filters-count>{{ current_filters_count }}</span>
            {% render 'icon-core-filter' %}
          </button>
        </div>
      </nav>
    {%- endif -%}

    <div class="collection__active__filters__wrapper{% unless filter_count > 0 %} is-hidden{% endunless %}">
      <div class="collection__active__filters" data-active-filters>
        {%- if filter_count > 1 -%}
        <a href="{{ routes.search_url }}?{{ types }}&q={{ search.terms | url_encode }}" class="active__filters__clear" data-filter-update-url>{{ 'collections.sidebar.all_tags' | t }}</a>
        {%- endif -%}
        {{- filter_clears -}}
      </div>

      {%- if section.settings.show_products_count -%}
        <div class="collection__count" data-products-count>
          {%- if search.results_count -%}
            {{ 'general.search.results_with_count' | t: count: search.results_count | replace_first: '**', '<strong>' | replace_first: '**', '</strong>' | replace_first: '**', '<strong>' | replace_first: '**', '</strong>' }}
          {%- endif -%}
        </div>
      {%- endif -%}
    </div>

    <div class="collection__content">

      {%- if has_filters -%}
        <div class="collection__filters__wrapper filters--default-visible" data-collection-sidebar data-filters="filters" data-default-hide="false">
          <div class="collection__filters__outer">
            <div class="drawer__top">
              <div class="drawer__top__left">
                <p class="cart__drawer__title">{{ 'collections.sidebar.filter' | t }}</p>
              </div>

              <button class="drawer__button drawer__close"
                data-first-focus
                data-filters-toggle="filters"
                aria-label="{{ 'general.accessibility.close' | t }}">
                {% render 'icon-core-x' %}
              </button>
            </div>

            <div class="collection__filters__inner">
              <form data-sidebar-filter-form>
                <input type="hidden" name="q" value="{{ search.terms }}">

                {%- for filter in search.filters -%}
                  {% render 'filters',
                    filter: filter,
                    forloop: forloop,
                    accordion_open_boolean: accordion_open_boolean,
                    accordion_initial_state: accordion_initial_state %}
                {%- endfor -%}
              </form>
            </div>
          </div>

          <span class="drawer__underlay" data-filters-underlay>
            <span class="drawer__underlay__fill"></span>
            <span class="drawer__underlay__blur"></span>
          </span>
        </div>

      {%- endif -%}

      <div class="collection__products" data-products-grid>
        {% paginate search.results by section.settings.pagination_count %}
          {% comment %}
            <!-- Old search structure - commented out -->
            {% for item in search.results %}
              <div class="search__item__generic">
                {% if item.image or item.featured_media.preview_image %}

                  <div class="search__item__generic__image">
                    <a href="{{ item.url }}" title="{{ item.title | escape }}">
                      {% assign image = item.featured_media.preview_image | default: item.image %}
                      {% assign image_width = 70 | at_most: image.width %}
                      {% assign image_width_2x = image_width | times: 2 | at_most: image.width %}
                      {% assign alt = image.alt %}

                      {% capture srcset %}
                        {{ image | image_url: width: image_width_2x }} 2x,
                        {{ image | image_url: width: image_width }}
                      {% endcapture %}

                      {%- render 'image',
                        img_object: image,
                        wh_ratio: image.aspect_ratio,
                        width: image_width,
                        srcset: srcset,
                        alt: alt
                      -%}
                    </a>
                  </div>

                {% endif %}

                <div class="search__item__generic__text">
                  <p class="product__inline__title">
                    {{ item.title | link_to: item.url }}
                  </p>

                  {% if item.object_type == 'product' %}
                    <p class="product__inline__price">
                      {%- assign product = item -%}
                      {%- assign on_sale = false -%}
                      {%- assign sold_out = true -%}
                      {%- assign current_variant = product.first_available_variant -%}

                      {%- if product.compare_at_price > item.price -%}
                        {%- assign on_sale = true -%}
                      {%- endif -%}

                      {%- if product.available -%}
                        {%- assign sold_out = false -%}
                      {%- endif -%}

                      <span class="price{% if on_sale %} on-sale{% endif %}">
                        {% if product.price_varies %}{{ 'products.general.from' | t }} {% endif %}
                        {% if settings.currency_code_enable %}
                          {{ product.price | money_with_currency }}
                        {% else %}
                          {{ product.price | money }}
                        {% endif %}
                      </span>

                      {% if on_sale %}
                        <span class="compare-at">
                          {% if settings.currency_code_enable %}
                            {{ product.compare_at_price | money_with_currency }}
                          {% else %}
                            {{ product.compare_at_price | money }}
                          {% endif %}
                        </span>
                      {% endif %}

                      {% if current_variant.unit_price %}
                        {% capture unit_price_separator %}
                          <span aria-hidden="true">/</span><span class="visually-hidden">{{ 'general.accessibility.unit_price_separator' | t }}&nbsp;</span>
                        {% endcapture %}

                        {% capture unit_price_base_unit %}
                          {% if current_variant.unit_price_measurement.reference_value != 1 %}
                            {{ current_variant.unit_price_measurement.reference_value }}
                          {% endif %}
                          {{ current_variant.unit_price_measurement.reference_unit }}
                        {% endcapture %}

                          <br />
                          <span class="visually-hidden">{{ 'products.product.unit_price_label' | t }}</span>
                          <span class="price-per-unit">{{ current_variant.unit_price | money }}{{ unit_price_separator }}{{ unit_price_base_unit }}</span>
                      {% endif %}

                      {% if sold_out %}
                        <br /><em>{{ 'products.product.sold_out' | t }}</em>
                      {% endif %}
                    </p>
                    {%- if settings.product_grid_show_rating and product.metafields.reviews.rating.value != blank -%}
                      <div class="rating__wrapper__search">
                        {% render 'product-rating', product: product, show_rating_count: settings.product_grid_show_rating_count %}
                      </div>
                    {%- endif -%}
                  {% endif %}
                  </div>
                </div>
              {% unless forloop.last %}<hr>{% endunless %}
            {% endfor %}
          {% endcomment %}

          <!-- New card-based search results -->
          <div class="search-results-grid float-grid grid--uniform">
            {% for item in search.results %}
              <div class="grid__item medium-up--one-third">
                {% if item.object_type == 'article' %}
                  <!-- Article Card -->
                  <div class="article__item">
                    <div class="article__item-image" data-grid-slide>
                      <a href="{{ item.url }}">
                        {%- assign article_image = item.image -%}
                        {%- render 'image', 
                          cover: true, 
                          img_object: article_image, 
                          wh_ratio: 1.7, 
                          alt_default: item.title, 
                          loading: 'lazy' -%}
                      </a>
                    </div>

                    <div class="article__item-content">
                      <!-- Date -->
                      <div class="article__item-meta">
                        <span class="article__item-date">
                          <time>{{ item.published_at | date: format: 'month_day_year' }}</time>
                        </span>
                      </div>

                      <!-- Title -->
                      <h3 class="article__item-title heading-size-6 mb-0">
                        <a href="{{ item.url }}">{{ item.title }}</a>
                      </h3>

                      <!-- Excerpt -->
                      {% if item.excerpt_or_content != blank %}
                        <div class="rte body-size-4">
                          <p>{{ item.excerpt_or_content | strip_html | truncatewords: 25 }}</p>
                        </div>
                      {% endif %}

                      <!-- Read Button -->
                      <a href="{{ item.url }}" class="btn--black btn--outline hero__btn btn--blogread">Read</a>
                    </div>
                  </div>

                {% elsif item.object_type == 'product' %}
                  <!-- Product Card -->
                  <div class="product__item">
                    <div class="product__item-image" data-grid-slide>
                      <a href="{{ item.url }}">
                        {%- assign product_image = item.featured_media.preview_image | default: item.image -%}
                        {%- render 'image', 
                          cover: true, 
                          img_object: product_image, 
                          wh_ratio: 1.0, 
                          alt_default: item.title, 
                          loading: 'lazy' -%}
                      </a>
                    </div>

                    <div class="product__item-content">
                      <!-- Title -->
                      <h3 class="product__item-title heading-size-6 mb-0">
                        <a href="{{ item.url }}">{{ item.title }}</a>
                      </h3>

                      <!-- Price -->
                      <div class="product__item-price">
                        {%- assign on_sale = false -%}
                        {%- if item.compare_at_price > item.price -%}
                          {%- assign on_sale = true -%}
                        {%- endif -%}

                        <span class="price{% if on_sale %} on-sale{% endif %}">
                          {% if item.price_varies %}{{ 'products.general.from' | t }} {% endif %}
                          {% if settings.currency_code_enable %}
                            {{ item.price | money_with_currency }}
                          {% else %}
                            {{ item.price | money }}
                          {% endif %}
                        </span>

                        {% if on_sale %}
                          <span class="compare-at">
                            {% if settings.currency_code_enable %}
                              {{ item.compare_at_price | money_with_currency }}
                            {% else %}
                              {{ item.compare_at_price | money }}
                            {% endif %}
                          </span>
                        {% endif %}
                      </div>

                      <!-- Shop Now Button -->
                      <a href="{{ item.url }}" class="btn--black btn--outline hero__btn">Shop Now</a>
                    </div>
                  </div>
                {% endif %}
              </div>
            {% endfor %}
          </div>

            {% if paginate.pages > 1 %}
              <div class="text-center pt-r11">
                {% render 'pagination-custom', paginate: paginate %}
              </div>
            {% endif %}
        {% endpaginate %}
      </div>
    </div>
  {% endif %}
</section>

<!-- Search bar styling to match blog search -->
<style>
  /* Search bar wrapper */
  #shopify-section-{{ section.id }} .search-bar--styled {
    display: flex;
    align-items: center;
    background: #f8f8f8;
    border-radius: 25px;
    padding: 0px 5px;
    border: 1px solid #e0e0e0;
    margin: 0 auto;
    position: relative;
  }
  
  /* Search input */
  #shopify-section-{{ section.id }} .search-bar__input {
    flex: 1;
    border: none;
    background: transparent;
    padding: 8px 12px;
    font-size: 20px;
    outline: none;
    margin: 0px;
    width: 252px;
    max-width: 100%;
  }
  
  #shopify-section-{{ section.id }} .search-bar__input::placeholder {
    color: #888;
  }
  
  /* Reset button */
  #shopify-section-{{ section.id }} .search-bar__reset {
    background: none;
    border: none;
    padding: 4px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 5px;
    opacity: 0.6;
  }
  
  #shopify-section-{{ section.id }} .search-bar__reset:hover {
    opacity: 1;
  }
  
  /* Search submit button */
  #shopify-section-{{ section.id }} .search-bar__button {
    background: none;
    border: none;
    padding: 4px;
    cursor: pointer;
    display: flex;
    align-items: center;
    background-color: #4D4D4D;
    transition: all 0.3s ease;
    justify-content: center;
    width: 37px;
    height: 37px;
    border-radius: 50px;
  }
  
  #shopify-section-{{ section.id }} .search-bar__button:hover {
    background-color: #304040;
    transition: all 0.3s ease;
  }
  
  #shopify-section-{{ section.id }} .search-bar__button svg {
    width: 20px;
    height: 20px;
  }
  
  #shopify-section-{{ section.id }} .search-bar__button svg path {
    stroke: #fff !important;
  }
  
  /* Focus handling */
  #shopify-section-{{ section.id }} .search-bar__input:focus {
    outline: none;
  }
  
  #shopify-section-{{ section.id }} .search-bar--styled:focus-within {
    border-color: #000;
  }
  #shopify-section-{{ section.id }} .search__page__heading .note{
    border-radius: 50px;
  }
  /* Mobile adjustments */
  @media (max-width: 749px) {
    #shopify-section-{{ section.id }} .search-bar--styled {
      max-width: 100%;
      width: 100%;
    }
  }
  
  /* Search results grid styling */
  #shopify-section-{{ section.id }} .search-results-grid {
    margin-top: 30px;
  }
  
  /* Article and Product card consistency */
  #shopify-section-{{ section.id }} .article__item,
  #shopify-section-{{ section.id }} .product__item {
    margin-bottom: 30px;
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  #shopify-section-{{ section.id }} .article__item-content,
  #shopify-section-{{ section.id }} .product__item-content {
    padding: 20px 0;
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  #shopify-section-{{ section.id }} .article__item-image,
  #shopify-section-{{ section.id }} .product__item-image {
    margin-bottom: 15px;
  }
  
  /* Button spacing */
  #shopify-section-{{ section.id }} .btn--blogread,
  #shopify-section-{{ section.id }} .hero__btn {
    margin-top: auto;
    min-width: 120px;
  }
  
  /* Product price styling */
  #shopify-section-{{ section.id }} .product__item-price {
    margin: 15px 0;
    font-weight: 600;
  }
  
  #shopify-section-{{ section.id }} .product__item-price .compare-at {
    text-decoration: line-through;
    opacity: 0.7;
    margin-left: 10px;
  }
  
  /* Mobile grid adjustments */
  @media (max-width: 749px) {
    #shopify-section-{{ section.id }} .grid__item {
      width: 100% !important;
      margin-bottom: 30px;
    }
  }
</style>

<!-- JavaScript to preserve blog search parameters -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const searchForm = document.getElementById('main-search-form');
    const paramsContainer = document.getElementById('blog-search-params');
    
    if (searchForm && paramsContainer) {
      // Get current URL parameters
      const urlParams = new URLSearchParams(window.location.search);
      
      // Check if we have blog search parameters
      const typeParam = urlParams.get('type');
      const prefixParam = urlParams.get('options[prefix]');
      const blogParam = urlParams.get('options[blog]');
      
      console.log('URL Params detected:', {
        type: typeParam,
        prefix: prefixParam,
        blog: blogParam
      });
      
      // If we have blog search parameters, add the hidden inputs
      if (typeParam === 'article' && prefixParam === 'last' && blogParam) {
        // Add type=article
        const typeInput = document.createElement('input');
        typeInput.type = 'hidden';
        typeInput.name = 'type';
        typeInput.value = 'article';
        paramsContainer.appendChild(typeInput);
        
        // Add options[prefix]=last
        const prefixInput = document.createElement('input');
        prefixInput.type = 'hidden';
        prefixInput.name = 'options[prefix]';
        prefixInput.value = 'last';
        paramsContainer.appendChild(prefixInput);
        
        // Add options[blog]=blog-handle
        const blogInput = document.createElement('input');
        blogInput.type = 'hidden';
        blogInput.name = 'options[blog]';
        blogInput.value = blogParam;
        paramsContainer.appendChild(blogInput);
        
        console.log('Blog search parameters added to form');
      } else {
        console.log('No blog search parameters detected');
      }
    }
  });
</script>

{% schema %}
{
  "name": "Search",
  "settings": [
    {
      "type": "header",
      "content": "Search"
    },
    {
      "type": "checkbox",
      "id": "show_filters",
      "default": true,
      "label": "Show product filters"
    },
    {
      "type": "checkbox",
      "id": "collapse_filters",
      "label": "Collapse filter accordions",
      "info": "Active filters will remain open",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_products_count",
      "label": "Show products count",
      "info": "Product count will be shown when filters are active",
      "default": true
    },
    {
      "type": "range",
      "id": "pagination_count",
      "min": 3,
      "max": 50,
      "step": 1,
      "label": "Results per page",
      "default": 24
    },
    {
      "type": "header",
      "content": "Section spacing"
    },
    {
      "type": "select",
      "id": "width",
      "label": "Width",
      "default": "wrapper",
      "options": [
        { "value": "wrapper--full", "label": "Full width padded" },
        { "value": "wrapper", "label": "Page width" },
        { "value": "wrapper--narrow", "label": "Page width narrow" },
        { "value": "wrapper--tiny", "label": "Page width extra narrow" }
      ]
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 180,
      "step": 2,
      "unit": "px",
      "label": "Padding top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 180,
      "step": 2,
      "unit": "px",
      "label": "Padding bottom",
      "default": 36
    }
  ]
}
{% endschema %}
