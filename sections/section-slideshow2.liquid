<!-- /sections/section-slideshow.liquid -->

{%- assign scroll_class = '' -%}
{% if section.settings.height == 'use_screen_full' %}
  {%- assign scroll_class = 'has-scroll-arrow' -%}
{%- endif -%}

{% assign hero_content_class = 'hero__content' %}
{% if section.settings.width == 'wrapper--tiny' or section.settings.width == 'wrapper--narrow' %}
  {% assign hero_content_class = 'hero__content hero__content--large' %}
{% endif %}

<div class="section-slideshow {{ section.settings.color_bg }}"
  data-section-id="{{ section.id }}"
  data-section-type="slideshow"
  style="--PT: {{ section.settings.padding_top }}px; --PB: {{ section.settings.padding_bottom }}px;">
  {% if section.blocks.size > 0 %}
    <div class="{{ section.settings.width }} section-padding">
      <div class="slideshow__wrapper js-overflow-container {% if section.settings.show_dots %}flickity-badge-dots{% endif %} {{ scroll_class }}"
      data-slideshow-wrapper
      data-slideshow-autoplay="{{ section.settings.autoplay }}"
      data-slideshow-slides="{{ section.blocks.size }}"
      data-slideshow-speed="{{ section.settings.autoplay_speed | times: 1000 }}"
      {% if section.blocks.first.type == 'video_slide' %}
        {% assign first_video = section.blocks.first.settings.video_bg %}
        {% assign first_mobile_video = section.blocks.first.settings.mobile_video_bg %}
        {% if first_video %}
          {% comment %} Pre-calculate and set initial height based on first video aspect ratio {% endcomment %}
          {% assign video_aspect = first_video.aspect_ratio | default: 1.779 %}
          {% assign mobile_aspect = first_mobile_video.aspect_ratio | default: video_aspect %}
          {% assign initial_height = 100 | divided_by: video_aspect | times: 100 %}
          style="min-height: calc(100vw / {{ video_aspect }}); --initial-height: calc(100vw / {{ video_aspect }}); --mobile-initial-height: calc(100vw / {{ mobile_aspect }});"
          data-first-video-aspect="{{ video_aspect }}"
          data-first-mobile-video-aspect="{{ mobile_aspect }}">
        {% endif %}
      {% else %}
        {% assign scroll_class = '' -%}
      {% endif %}
      {% for block in section.blocks %}
        {% case block.type %}
          {% when 'video_slide' %}
            <div class="slideshow__slide section--image section--video {{ block.settings.text_color }}"
              {% if section.settings.width == "wrapper--none" and section.settings.padding_top == 0 %} data-overlay-header {% endif %}
              id="aos-{{ block.id }}"
              data-slideshow-index="{{ forloop.index0 }}"
              data-mobile-bg-color="{{ block.settings.mobile_background_color }}"
              data-mobile-bg-opacity="{{ block.settings.mobile_background_opacity }}"
              {% if block.settings.video_bg %}data-video-aspect="{{ block.settings.video_bg.aspect_ratio | default: 1.779 }}"{% endif %}
              {% if block.settings.mobile_video_bg %}data-mobile-video-aspect="{{ block.settings.mobile_video_bg.aspect_ratio | default: 1.779 }}"{% endif %}
              {{ block.shopify_attributes }} style="background-color: {{ block.settings.mobile_background_color }};">
              <div class="hero__content__wrapper {{ block.settings.text_align }} video-wrapper">
                <div class="{{ hero_content_class }} js-overflow-content {% if block.settings.enable_overlay_text %} backdrop--hero{% endif %}" {% if block.settings.enable_overlay_text %} style="--bg: {{ block.settings.overlay_color }}; --opacity: {{ block.settings.overlay_opacity | times: 0.01 }};"{% endif %}>
                  {% unless block.settings.kicker == '' %}
                    <p class="hero__kicker"
                      data-aos="hero"
                      data-aos-order="1">
                      {{ block.settings.kicker | escape }}
                    </p>
                  {% endunless %}
                  {% unless block.settings.title == '' %}
                    <h1 class="hero__title heading-size-9"
                      data-aos="hero"
                      data-aos-order="2">
                      {{ block.settings.title | escape }}
                    </h1>
                  {% endunless %}
                  {% unless block.settings.richtext == '' %}
                    <div class="hero__description rte body-size-6"
                      data-aos="hero"
                      data-aos-order="3">
                      {{ block.settings.richtext }}
                    </div>
                  {% endunless %}
                  
                  {% unless block.settings.link_text == '' and block.settings.link_text_2 == '' %}
                    <div class="hero__cta__wrapper">
                      {% if block.settings.link_text != blank %}
                        <a class="{{ block.settings.button_color }} {{ block.settings.button_style }} hero__btn btn--long"
                          href="{{ block.settings.link }}"
                          data-aos="hero"
                          data-aos-order="4">
                          {{ block.settings.link_text | escape }}
                        </a>
                      {% endif %}
                      {% if block.settings.link_text_2 != blank %}
                        <a class="{{ block.settings.button_color_2 }} {{ block.settings.button_style_2 }} hero__btn btn--long"
                          href="{{ block.settings.link_2 }}"
                          data-aos="hero"
                          data-aos-order="5">
                          {{ block.settings.link_text_2 | escape }}
                        </a>
                      {% endif %}
                    </div>
                  {% endunless %}
                </div>
                <div data-slide-custom-prev class="custom-prev-next-button previous"></div>
                <div data-slide-custom-next class="custom-prev-next-button next"></div>
              </div>

              <div class="section--image section--video fade-in-child js-overflow-container {{ section.settings.height }}"
                {% if block.settings.video_bg %}
                  {% assign video_wh_ratio = block.settings.video_bg.aspect_ratio | default: 1.779 %}
                  style="--wh-ratio: {{ video_wh_ratio }}; {% if section.settings.height == 'use_image' %}padding-bottom: calc(100% / {{ video_wh_ratio }});{% endif %}"
                {% elsif block.settings.mobile_video_bg %}
                  {% assign video_wh_ratio = block.settings.mobile_video_bg.aspect_ratio | default: 1.779 %}
                  style="--wh-ratio: {{ video_wh_ratio }}; {% if section.settings.height == 'use_image' %}padding-bottom: calc(100% / {{ video_wh_ratio }});{% endif %}"
                {% else %}
                  style="--wh-ratio: 1.779; {% if section.settings.height == 'use_image' %}padding-bottom: 56.25%;{% endif %}"
                {% endif %}>
                <div class="video-autoplay-wrapper">
                  {%- assign video_styles = block.settings.object_position | replace: '-', ' ' | prepend: 'object-position: ' -%}
                  {% if block.settings.mobile_video_bg != blank and request.design_mode != true %}
                    <div class="video-autoplay-wrapper--mobile">
                      {{ block.settings.mobile_video_bg | video_tag: autoplay: true, loop: true, muted: true, controls: false, playsinline: true, style: video_styles, data-video-autoplay: '', preload: "metadata", media: "(max-width: 749px)" }}
                      {% if block.settings.mobile_video_bg.preview_image %}
                      <img 
                        src="{{ block.settings.mobile_video_bg.preview_image | img_url: 'master' }}" 
                        alt="{{ block.settings.mobile_video_bg.alt | default: 'Mobile Video' }}"
                        style="{{ video_styles }}; width: 100%; height: 100%; object-fit: cover;"
                        class="video-preview-image"
                      >
                      {% endif %}
                    </div>
                  {% endif %}
                  {% if block.settings.video_bg != blank %}
                    <div class="video-autoplay-wrapper--{%if block.settings.mobile_video_bg != blank %}desktop{% endif %}" {% if section.settings.height == 'use_screen_full' %} style="height: 100%;" {% endif %}>
                      {{ block.settings.video_bg | video_tag: autoplay: true, loop: true, muted: true, controls: false, playsinline: true, style: video_styles, data-video-autoplay: '', preload: "metadata", media: "(min-width: 750px)" }}
                      {% if block.settings.video_bg.preview_image %}
                      <img 
                        src="{{ block.settings.video_bg.preview_image | img_url: 'master' }}" 
                        alt="{{ block.settings.video_bg.alt | default: 'Video' }}"
                        style="{{ video_styles }}; width: 100%; height: 100%; object-fit: cover;"
                        class="video-preview-image"
                      >
                      {% endif %}
                    </div>
                  {% endif %}
                </div>
              </div>

              {% unless block.settings.enable_overlay_text %}
                <div class="image-overlay" style="--bg:{{ block.settings.overlay_color }}; opacity:{{ block.settings.overlay_opacity | times: 0.01 }};"></div>
              {% endunless %}

              {% if block.settings.link_text == '' and block.settings.link %}
                <a class="link-over-image" href="{{ block.settings.link }}" aria-label="{{ block.settings.link.object.title | default: block.settings.title | strip_html | escape }}"></a>
              {% endif %}

              {% if section.settings.height == 'use_screen_full' %}
                <div class="scroll_icon_wrap">
                  <button data-scroll-down class="scroll_link bloop" aria-label="{{ 'general.accessibility.scroll' | t }}">
                    <span class="scroll_icon">{% render 'icon-core-chevron-down' %}</span>
                  </button>
                </div>
              {% endif %}
            </div>
          {% when 'image' %}
            <div class="slideshow__slide section--image {{ block.settings.text_color }}"
              {% if section.settings.width == "wrapper--none" and section.settings.padding_top == 0 %} data-overlay-header {% endif %}
              id="aos-{{ block.id }}"
              data-slideshow-index="{{ forloop.index0 }}"
              {{ block.shopify_attributes }}>
              <div class="hero__content__wrapper {{ block.settings.text_align }}">
                <div class="{{ hero_content_class }} js-overflow-content {% if block.settings.enable_overlay_text %} backdrop--hero{% endif %}" {% if block.settings.enable_overlay_text %} style="--bg: {{ block.settings.overlay_color }}; --opacity: {{ block.settings.overlay_opacity | times: 0.01 }};"{% endif %}>
                  {% unless block.settings.kicker == '' %}
                    <p class="hero__kicker"
                      data-aos="hero"
                      data-aos-order="1">
                      {{ block.settings.kicker | escape }}
                    </p>
                  {% endunless %}
                  {% unless block.settings.title == '' %}
                    <h1 class="hero__title heading-size-9"
                      data-aos="hero"
                      data-aos-order="2">
                      {{ block.settings.title | escape }}
                    </h1>
                  {% endunless %}
                  {% unless block.settings.richtext == '' %}
                    <div class="hero__description rte body-size-6"
                      data-aos="hero"
                      data-aos-order="3">
                      {{ block.settings.richtext }}
                    </div>
                  {% endunless %}
                  {% unless block.settings.link_text == '' and block.settings.link_text_2 == '' %}
                    <div class="hero__cta__wrapper">
                      {% if block.settings.link_text != blank %}
                        <a class="{{ block.settings.button_color }} {{ block.settings.button_style }} hero__btn btn--long"
                          href="{{ block.settings.link }}"
                          data-aos="hero"
                          data-aos-order="4">
                          {{ block.settings.link_text | escape }}
                        </a>
                      {% endif %}
                      {% if block.settings.link_text_2 != blank %}
                        <a class="{{ block.settings.button_color_2 }} {{ block.settings.button_style_2 }} hero__btn btn--long"
                          href="{{ block.settings.link_2 }}"
                          data-aos="hero"
                          data-aos-order="5">
                          {{ block.settings.link_text_2 | escape }}
                        </a>
                      {% endif %}
                    </div>
                  {% endunless %}
                </div>
                <div data-slide-custom-prev class="custom-prev-next-button previous"></div>
                <div data-slide-custom-next class="custom-prev-next-button next"></div>
              </div>

              {% unless block.settings.enable_overlay_text %}
                <div class="image-overlay" style="--bg:{{ block.settings.overlay_color }}; opacity:{{ block.settings.overlay_opacity | times: 0.01 }};"></div>
              {% endunless %}

              {% if section.settings.preload_first_image and forloop.first %}
                {%- assign preload = true -%}
                {%- assign loading = 'eager' -%}
                {%- assign fetchpriority = 'high' -%}
              {% else %}
                {%- assign preload = false -%}
                {%- assign loading = 'lazy' -%}
              {% endif %}

              {%- assign alt_default = "Slideshow Image " | append: forloop.index -%}
              {%- assign alt = block.settings.image.alt | default: alt_default -%}
              {% render 'image-parallax', img_object: block.settings.image, img_object_mobile: block.settings.mobile_image, frame_height_class: section.settings.height, alt: alt, preload: preload, loading: loading, fetchpriority: fetchpriority %}

              {% if block.settings.link_text == '' and block.settings.link %}
                <a class="link-over-image" href="{{ block.settings.link }}" aria-label="{{ block.settings.link.object.title | default: block.settings.title | strip_html | escape }}"></a>
              {% endif %}

              {% if section.settings.height == 'use_screen_full' %}
                <div class="scroll_icon_wrap">
                  <button data-scroll-down class="scroll_link bloop" aria-label="{{ 'general.accessibility.scroll' | t }}">
                    <span class="scroll_icon">{% render 'icon-core-chevron-down' %}</span>
                  </button>
                </div>
              {% endif %}
            </div>
        {% endcase %}
      {% endfor %}
      </div>
    </div>
  {% endif %}

  {% if section.blocks.size == 0 %}
    <div class="slideshow__slide">
      <div class="text-center vertical-align">{{ 'home_page.onboarding.no_content' | t }}</div>
      <div class="image-overlay" style="--bg: #000; opacity:0.15;"></div>
    </div>
  {% endif %}

{% comment %} Generate JSON-LD VideoObject Schema for Video Slides {% endcomment %}
{% render 'video-json-ld', 
  video_slides: section.blocks | where: 'type', 'video_slide',
  section_id: section.id
%}

<style>
  #shopify-section-{{ section.id }} .video-wrapper {
    height: 100%;
  }
  #shopify-section-{{ section.id }} .section--video{
    height: 100%;
  }
  #shopify-section-{{ section.id }} .slideshow__slide.section--video  {
    height: 100%;
  }

  /* Initial height for flickity viewport based on video aspect ratio */
  #shopify-section-{{ section.id }} .slideshow__wrapper[data-first-video-aspect] .flickity-viewport {
    min-height: var(--initial-height, 500px);
    height: var(--initial-height, 500px) !important;
  }

  /* Style for preview images that show before video loads */
  #shopify-section-{{ section.id }} .video-preview-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    opacity: 1;
    transition: opacity 0.5s ease;
  }
  #shopify-section-{{ section.id }} .video-autoplay-wrapper video {
    z-index: 2;
    position: relative;
  }
  /* Hide preview image when video is playing */
  #shopify-section-{{ section.id }} .video-autoplay-wrapper--mobile video.playing + img.video-preview-image,
  #shopify-section-{{ section.id }} .video-autoplay-wrapper--desktop video.playing + img.video-preview-image {
    opacity: 0;
  }

  /* Ensure correct stacking order */
  #shopify-section-{{ section.id }} .video-autoplay-wrapper--mobile {
    display: none;
  }
  #shopify-section-{{ section.id }} .video-autoplay-wrapper--desktop {
    display: block;
  }

  @media only screen and (max-width: 749px) {
    /* Use mobile video aspect ratio for the height on mobile */
    #shopify-section-{{ section.id }} .slideshow__wrapper[data-first-mobile-video-aspect] .flickity-viewport {
      min-height: var(--mobile-initial-height, calc(100vw / 1.779)) !important;
      height: var(--mobile-initial-height, calc(100vw / 1.779)) !important;
    }

    /* Show mobile video, hide desktop video */
    #shopify-section-{{ section.id }} .video-autoplay-wrapper--mobile {
      display: block;
    }
    #shopify-section-{{ section.id }} .video-autoplay-wrapper--desktop {
      display: none;
    }

    #shopify-section-{{ section.id }} .slideshow__wrapper {
      height: auto !important;
    }

    #shopify-section-{{ section.id }} .slideshow__slide.section--video {
      display: flex;
      flex-direction: column;
      position: relative;
      height: auto !important;
      min-height: unset !important;
    }

    #shopify-section-{{ section.id }} .slideshow__slide.section--video .section--video {
      order: 1;
      width: 100%;
      padding-bottom: 56.25%; /* Default 16:9 Aspect Ratio */
      position: relative;
      margin-bottom: 0px;
    }

    /* If we have a mobile video with a specific aspect ratio, use that */
    #shopify-section-{{ section.id }} .slideshow__slide.section--video[data-mobile-video-aspect] .section--video {
      padding-bottom: calc(100% / var(--mobile-video-aspect, 1.779));
    }

    #shopify-section-{{ section.id }} .slideshow__slide.section--video .video-autoplay-wrapper {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    #shopify-section-{{ section.id }} .slideshow__slide.section--video .video-autoplay-wrapper video {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    /*#shopify-section-{{ section.id }} .slideshow__slide.section--video .hero__content__wrapper {
      order: 2;
      position: relative !important;
      top: auto !important;
      left: auto !important;
      transform: none !important;
      width: 100%;
      padding: 30px 20px;
      height: auto !important;
    }*/

    #shopify-section-{{ section.id }} .slideshow__slide.section--video .hero__content {
      position: relative !important;
      padding: 0 !important;
      transform: none !important;
    }
    /*#shopify-section-{{ section.id }} .slideshow__slide.section--video .backdrop--hero:before {
      display: none;
    }*/
    #shopify-section-{{ section.id }} .section-slideshow .flickity-page-dots {
      right: 50%;
      transform: translateX(50%);
      bottom: 5px;
    }
    #shopify-section-{{ section.id }} .flickity-badge-dots .flickity-page-dots .flickity-page-dot.is-selected{
      width: 20px;
      border-radius: 10px;
      transition: 0.3s;
    }
  }

  /* Handle video resizing for all screen sizes */
  #shopify-section-{{ section.id }} .use_image.section--video {
    height: auto !important;
    padding-bottom: 56.25%; /* Default 16:9 Aspect Ratio */
    position: relative;
  }

  /* If we have a video with a specific aspect ratio, use that */
  #shopify-section-{{ section.id }} .slideshow__slide.section--video[data-video-aspect] .use_image.section--video {
    padding-bottom: calc(100% / var(--video-aspect, 1.779));
  }

  #shopify-section-{{ section.id }} .use_image.section--video .video-autoplay-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  #shopify-section-{{ section.id }} .use_image.section--video .video-autoplay-wrapper video {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* Hide dots when setting is disabled */
  #shopify-section-{{ section.id }} .slideshow__wrapper:not(.flickity-badge-dots) .flickity-page-dots {
    display: none;
  }
</style>
</div>

{% schema %}
{
  "name": "Slideshow2",
  "settings": [
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto-rotate slides",
      "default": false
    },
    {
      "type":    "range",
      "id":      "autoplay_speed",
      "min":     1,
      "max":     15,
      "step":    1,
      "unit":    "sec",
      "label":   "Change slides every",
      "default": 8
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show navigation dots",
      "default": true,
      "info": "Displays the navigation dots at the bottom of the slideshow"
    },
    {
      "type": "checkbox",
      "id": "preload_first_image",
      "label": "Prioritize first image load",
      "default": false,
      "info": "Prioritize loading the first image of the slideshow before all other images on the page. Helpful when this section is first on a page, harmful when this section is below other image sections."
    },
    {
      "type": "select",
      "id": "height",
      "label": "Section height",
      "default": "use_screen_two_thirds",
      "options": [
        { "value": "use_screen_full", "label": "Full screen height"},
        { "value": "use_screen_three_quarters", "label": "Three quarters of screen height"},
        { "value": "use_screen_two_thirds", "label": "Two thirds of screen height"},
        { "value": "use_screen_one_half", "label": "One half of screen height"},
        { "value": "use_screen_one_third", "label": "One third of screen height"},
        { "value": "use_screen_one_fifth", "label": "One fifth of screen height"},
        { "value": "use_pixels_800", "label": "800px" },
        { "value": "use_pixels_650", "label": "650px" },
        { "value": "use_pixels_500", "label": "500px" },
        { "value": "use_image", "label": "Image height"}
      ]
    },
    {
      "type": "select",
      "id": "color_bg",
      "label": "Background color",
      "default": "palette--light bg--neutral",
      "options": [
        { "value": "palette--light bg--neutral", "label": "Default"},
        { "value": "palette--light bg--accent", "label": "Light"},
        { "value": "palette--dark bg--invert", "label": "Dark"},
        { "value": "palette--dark bg--invert--accent", "label": "Dark accent"},
        { "value": "palette--bright bg--bright", "label": "Bright"},
        { "value": "palette--bright bg--bright--accent", "label": "Bright accent"}
      ]
    },
    {
      "type": "header",
      "content": "Section spacing"
    },
    {
      "type": "select",
      "id": "width",
      "label": "Width",
      "default": "wrapper--none",
      "options": [
        { "value": "wrapper--none", "label": "Full width" },
        { "value": "wrapper--full", "label": "Full width padded" },
        { "value": "wrapper", "label": "Page width" },
        { "value": "wrapper--narrow", "label": "Page width narrow" }
      ]
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 180,
      "step": 2,
      "unit": "px",
      "label": "Padding top",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 180,
      "step": 2,
      "unit": "px",
      "label": "Padding bottom",
      "default": 0
    }
  ],
  "blocks": [
    {
      "type": "video_slide",
      "name": "Video Slide",
      "settings": [
        {
          "type": "video",
          "id": "video_bg",
          "label": "Desktop video"
        },
        {
          "type": "video",
          "id": "mobile_video_bg",
          "label": "Mobile video"
        },
        {
          "type": "select",
          "id": "object_position",
          "label": "Video position",
          "default": "center-center",
          "options": [
            { "label": "Top", "value": "center-top" },
            { "label": "Right", "value": "right-center" },
            { "label": "Center", "value": "center-center" },
            { "label": "Left", "value": "left-center" },
            { "label": "Bottom", "value": "center-bottom" }
          ]
        },
        {
          "type": "image_picker",
          "id": "fallback_image",
          "label": "Fallback image",
          "info": "This image will be shown while the video loads or if video cannot be played"
        },
        {
          "type":    "range",
          "id":      "overlay_opacity",
          "min":     0,
          "max":     100,
          "step":    5,
          "label":   "Image overlay opacity",
          "info":    "Increase contrast for legible text.",
          "default": 15
        },
        {
          "type": "color",
          "id": "overlay_color",
          "label": "Overlay color",
          "default": "#000"
        },
        {
          "type": "checkbox",
          "id": "enable_overlay_text",
          "label": "Overlay behind text only",
          "default": false
        },
        {
          "type": "header",
          "content": "Text"
        },
        {
          "type": "text",
          "id": "kicker",
          "label": "Kicker",
          "default": "Introducing"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Video slide"
        },
        {
          "type": "richtext",
          "id": "richtext",
          "label": "Text",
          "default": "<p>Tell your brand's story through video.</p>"
        },
        {
          "type": "select",
          "id": "text_align",
          "label": "Alignment",
          "default": "align--middle-center",
          "options": [
            { "value": "align--top-left", "label": "Top left"},
            { "value": "align--top-center", "label": "Top center"},
            { "value": "align--top-right", "label": "Top right"},
            { "value": "align--middle-left", "label": "Middle left"},
            { "value": "align--middle-center", "label": "Absolute center"},
            { "value": "align--middle-right", "label": "Middle right"},
            { "value": "align--bottom-left", "label": "Bottom left"},
            { "value": "align--bottom-center", "label": "Bottom center"},
            { "value": "align--bottom-right", "label": "Bottom right"}
          ]
        },
        {
          "type": "select",
          "id": "text_color",
          "label": "Text color",
          "default": "text--white",
          "options": [
            { "value": "text--neutral", "label": "Normal text"},
            { "value": "text--white", "label": "White"},
            { "value": "text--primary", "label": "Primary accent"},
            { "value": "text--secondary", "label": "Secondary accent"},
            { "value": "text--black", "label": "Black"},
            { "value": "text--invert--primary", "label": "Primary dark accent"},
            { "value": "text--invert--secondary", "label": "Secondary dark accent"},
            { "value": "text--invert", "label": "Inverted text color"},
            { "value": "text--bright--primary", "label": "Primary bright accent"},
            { "value": "text--bright--secondary", "label": "Secondary bright accent"}
          ]
        },
        {
          "type": "header",
          "content": "Button"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Text",
          "default": "View products",
          "info": "Leave blank to link entire slide"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        },
        {
          "type": "select",
          "id": "button_color",
          "label": "Color",
          "default": "btn--white",
          "options": [
            { "value": "btn--primary", "label": "Bright accent" },
            { "value": "btn--secondary", "label": "Secondary accent" },
            { "value": "btn--neutral", "label": "Text color" },
            { "value": "btn--black", "label": "Black" },
            { "value": "btn--white", "label": "White" }
          ]
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "Button style",
          "default": "btn",
          "options": [
            { "value": "btn", "label": "Solid button"},
            { "value": "btn--soft", "label": "Soft button"},
            { "value": "btn--outline", "label": "Outlined button"}
          ]
        },
        {
          "type": "header",
          "content": "Button 2"
        },
        {
          "type": "text",
          "id": "link_text_2",
          "label": "Text",
          "info": "Leave blank to link entire slide"
        },
        {
          "type": "url",
          "id": "link_2",
          "label": "Link"
        },
        {
          "type": "select",
          "id": "button_color_2",
          "label": "Color",
          "default": "btn--white",
          "options": [
            { "value": "btn--primary", "label": "Bright accent" },
            { "value": "btn--secondary", "label": "Secondary accent" },
            { "value": "btn--neutral", "label": "Text color" },
            { "value": "btn--black", "label": "Black" },
            { "value": "btn--white", "label": "White" }
          ]
        },
        {
          "type": "select",
          "id": "button_style_2",
          "label": "Button style",
          "default": "btn",
          "options": [
            { "value": "btn", "label": "Solid button"},
            { "value": "btn--soft", "label": "Soft button"},
            { "value": "btn--outline", "label": "Outlined button"}
          ]
        },
        {
          "type": "header",
          "content": "Mobile background color"
        },
        {
          "type": "color",
          "id": "mobile_background_color",
          "label": "Mobile Background Color",
          "default": "#ffffff"
        }
      ]
    },
    {
      "type": "image",
      "name": "Slide",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "Match size to other slides"
        },
        {
          "type": "image_picker",
          "id": "mobile_image",
          "label": "Mobile image"
        },
        {
          "type":    "range",
          "id":      "overlay_opacity",
          "min":     0,
          "max":     100,
          "step":    5,
          "label":   "Image overlay opacity",
          "info":    "Increase contrast for legible text.",
          "default": 15
        },
        {
          "type": "color",
          "id": "overlay_color",
          "label": "Overlay color",
          "default": "#000"
        },
        {
          "type": "checkbox",
          "id": "enable_overlay_text",
          "label": "Overlay behind text only",
          "default": false
        },
        {
          "type": "header",
          "content": "Text"
        },
        {
          "type": "text",
          "id": "kicker",
          "label": "Kicker",
          "default": "Introducing"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Image slideshow"
        },
        {
          "type": "richtext",
          "id": "richtext",
          "label": "Text",
          "default": "<p>Tell your brand's story through images.</p>"
        },
        {
          "type": "select",
          "id": "text_align",
          "label": "Alignment",
          "default": "align--middle-center",
          "options": [
            { "value": "align--top-left", "label": "Top left"},
            { "value": "align--top-center", "label": "Top center"},
            { "value": "align--top-right", "label": "Top right"},
            { "value": "align--middle-left", "label": "Middle left"},
            { "value": "align--middle-center", "label": "Absolute center"},
            { "value": "align--middle-right", "label": "Middle right"},
            { "value": "align--bottom-left", "label": "Bottom left"},
            { "value": "align--bottom-center", "label": "Bottom center"},
            { "value": "align--bottom-right", "label": "Bottom right"}
          ]
        },
        {
          "type": "select",
          "id": "text_color",
          "label": "Text color",
          "default": "text--white",
          "options": [
            { "value": "text--neutral", "label": "Normal text"},
            { "value": "text--white", "label": "White"},
            { "value": "text--primary", "label": "Primary accent"},
            { "value": "text--secondary", "label": "Secondary accent"},
            { "value": "text--black", "label": "Black"},
            { "value": "text--invert--primary", "label": "Primary dark accent"},
            { "value": "text--invert--secondary", "label": "Secondary dark accent"},
            { "value": "text--invert", "label": "Inverted text color"},
            { "value": "text--bright--primary", "label": "Primary bright accent"},
            { "value": "text--bright--secondary", "label": "Secondary bright accent"}
          ]
        },
        {
          "type": "header",
          "content": "Button"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Text",
          "default": "View products",
          "info": "Leave blank to link entire image"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        },
        {
          "type": "select",
          "id": "button_color",
          "label": "Color",
          "default": "btn--white",
          "options": [
            { "value": "btn--primary", "label": "Bright accent" },
            { "value": "btn--secondary", "label": "Secondary accent" },
            { "value": "btn--neutral", "label": "Text color" },
            { "value": "btn--black", "label": "Black" },
            { "value": "btn--white", "label": "White" }
          ]
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "Button style",
          "default": "btn",
          "options": [
            { "value": "btn", "label": "Solid button"},
            { "value": "btn--soft", "label": "Soft button"},
            { "value": "btn--outline", "label": "Outlined button"}
          ]
        },
        {
          "type": "header",
          "content": "Button 2"
        },
        {
          "type": "text",
          "id": "link_text_2",
          "label": "Text",
          "info": "Leave blank to link entire image"
        },
        {
          "type": "url",
          "id": "link_2",
          "label": "Link"
        },
        {
          "type": "select",
          "id": "button_color_2",
          "label": "Color",
          "default": "btn--white",
          "options": [
            { "value": "btn--primary", "label": "Bright accent" },
            { "value": "btn--secondary", "label": "Secondary accent" },
            { "value": "btn--neutral", "label": "Text color" },
            { "value": "btn--black", "label": "Black" },
            { "value": "btn--white", "label": "White" }
          ]
        },
        {
          "type": "select",
          "id": "button_style_2",
          "label": "Button style",
          "default": "btn",
          "options": [
            { "value": "btn", "label": "Solid button"},
            { "value": "btn--soft", "label": "Soft button"},
            { "value": "btn--outline", "label": "Outlined button"}
          ]
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Slideshow2",
      "category": "Image",
      "settings": {
        "height": "use_screen_two_thirds"
      },
      "blocks": [
        {
          "type": "image"
        },
        {
          "type": "image"
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": ["header","footer","aside"]
  }
}
{% endschema %}

<script>
document.addEventListener('DOMContentLoaded', function() {
  const videoSlides = document.querySelectorAll('.slideshow__slide.section--video');
  const isMobile = window.innerWidth < 750;
  
  videoSlides.forEach(slide => {
    // Set mobile background color
    const bgColor = slide.getAttribute('data-mobile-bg-color');
    const bgOpacity = slide.getAttribute('data-mobile-bg-opacity');
    
    if (bgColor) {
      const color = bgColor.replace(')', `, ${bgOpacity/100})`).replace('rgb', 'rgba');
      slide.style.setProperty('--mobile-bg-color', color);
    }
    
    // Set CSS variables for aspect ratios
    const videoAspect = slide.getAttribute('data-video-aspect');
    const mobileVideoAspect = slide.getAttribute('data-mobile-video-aspect');
    
    if (videoAspect) {
      slide.style.setProperty('--video-aspect', videoAspect);
    }
    
    if (mobileVideoAspect) {
      slide.style.setProperty('--mobile-video-aspect', mobileVideoAspect);
    }
  });

  // Fix for slideshow with video slides
  const slideshowWrappers = document.querySelectorAll('[data-slideshow-wrapper]');
  slideshowWrappers.forEach(wrapper => {
    const section = wrapper.closest('.section-slideshow');
    const isUseImageHeight = section.querySelector('.use_image') !== null;
    const videoSlidesInWrapper = wrapper.querySelectorAll('.slideshow__slide.section--video');
    const totalSlides = wrapper.querySelectorAll('.slideshow__slide').length;
    const isFirstSlideVideo = wrapper.querySelector('.slideshow__slide:first-child.section--video') !== null;
    const isSingleSlide = totalSlides === 1;
    
    // Get video aspect ratio from Liquid if available
    const firstVideoAspect = wrapper.getAttribute('data-first-video-aspect');
    const firstMobileVideoAspect = wrapper.getAttribute('data-first-mobile-video-aspect');
    
    // Choose aspect ratio based on device
    const aspectRatio = isMobile && firstMobileVideoAspect ? firstMobileVideoAspect : firstVideoAspect;
    
    // Set flickity-viewport height from the calculated Liquid value
    if (aspectRatio && isFirstSlideVideo) {
      const viewport = wrapper.querySelector('.flickity-viewport');
      if (viewport) {
        // The CSS already sets this, but we reinforce it here
        const calculatedHeight = window.innerWidth / parseFloat(aspectRatio);
        viewport.style.height = `${calculatedHeight}px`;
        viewport.style.minHeight = `${calculatedHeight}px`;
      }
    }
    
    // Special handling for videos, especially for use_image height setting
    if (videoSlidesInWrapper.length > 0) {
      videoSlidesInWrapper.forEach(videoSlide => {
        // For each video slide, get all video elements (mobile and desktop)
        // Choose the appropriate video based on device
        const videos = isMobile ? 
          videoSlide.querySelectorAll('.video-autoplay-wrapper--mobile video') : 
          videoSlide.querySelectorAll('.video-autoplay-wrapper--desktop video');
        
        const allVideos = videoSlide.querySelectorAll('video');
        const previewImages = videoSlide.querySelectorAll('.video-preview-image');
        
        // Get slide-specific aspect ratios
        const slideVideoAspect = videoSlide.getAttribute('data-video-aspect');
        const slideMobileVideoAspect = videoSlide.getAttribute('data-mobile-video-aspect');
        const slideAspectRatio = isMobile && slideMobileVideoAspect ? slideMobileVideoAspect : slideVideoAspect;
        
        if (videos.length === 0) return;
        
        // Make all videos visible but only play the ones for current device
        allVideos.forEach((video) => {
          // Ensure visibility
          video.style.opacity = '1';
          video.style.visibility = 'visible';
        });
        
        videos.forEach((video, index) => {
          // Make sure video autoplay works for current device's videos
          video.addEventListener('playing', function() {
            video.classList.add('playing');
            // Hide corresponding preview image when video starts playing
            if (previewImages[index]) {
              previewImages[index].style.opacity = '0';
            }
          });
          
          if (video.paused) {
            video.play().catch(e => {
              console.log('Video autoplay prevented:', e);
            });
          }
          
          // Handle video metadata loading to get dimensions
          if (video.readyState >= 2) {
            setVideoDimensions(video, videoSlide, wrapper, isUseImageHeight, slideAspectRatio);
          } else {
            // Wait for video metadata to load before setting dimensions
            video.addEventListener('loadedmetadata', function() {
              setVideoDimensions(video, videoSlide, wrapper, isUseImageHeight, slideAspectRatio);
            });
          }
        });
      });
      
      // Wait for the videos to process before applying Flickity
      setTimeout(() => {
        ensureFlickityInitialized(wrapper, isFirstSlideVideo, aspectRatio);
      }, 100);
    }
  });

  /**
   * Set video dimensions based on video aspect ratio
   */
  function setVideoDimensions(video, videoSlide, wrapper, isUseImageHeight, liquidAspectRatio) {
    // Use liquid aspect ratio if available, otherwise calculate from video
    let videoRatio;
    if (liquidAspectRatio && parseFloat(liquidAspectRatio) > 0) {
      videoRatio = parseFloat(liquidAspectRatio);
    } else {
      videoRatio = video.videoWidth / video.videoHeight || 16/9; // Fallback to 16:9
    }
    
    const isMobile = window.innerWidth < 750;
    
    // The container elements that need their height set
    const videoContainers = videoSlide.querySelectorAll('.section--video');
    const videoWrapper = videoSlide.querySelector('.video-wrapper');
    
    let slideHeight;
    
    // For "use_image" height, we use the video's natural aspect ratio
    if (isUseImageHeight) {
      if (isMobile) {
        // On mobile, we need to handle the column layout differently
        // Use the provided mobile aspect ratio or fall back to 16:9
        slideHeight = window.innerWidth / videoRatio;
        
        // Set height on video container
        videoContainers.forEach(container => {
          container.style.height = `${slideHeight}px`;
          container.style.paddingBottom = '0'; // Override any percentage padding
        });
        
        // Make sure the slide itself has enough height
        videoSlide.style.minHeight = `${slideHeight + 100}px`; // Extra space for content
      } else {
        // On desktop, use the video's actual ratio for proper display
        slideHeight = wrapper.clientWidth / videoRatio;
        
        // Apply height to the main elements
        wrapper.style.height = `${slideHeight}px`;
        videoSlide.style.height = `${slideHeight}px`;
        if (videoWrapper) videoWrapper.style.height = `${slideHeight}px`;
        
        // Set height on video containers
        videoContainers.forEach(container => {
          container.style.height = `${slideHeight}px`;
          container.style.paddingBottom = '0'; // Override any percentage padding
        });
      }
    } else {
      // For fixed height settings (not use_image), ensure videos fill the container
      video.style.width = '100%';
      video.style.height = '100%';
      video.style.objectFit = 'cover';
    }
    
    // Force the slide to be visible
    videoSlide.style.opacity = '1';
    videoSlide.style.visibility = 'visible';
    
    // Ensure videos are visible
    const videoWrappers = videoSlide.querySelectorAll('.video-autoplay-wrapper, .video-autoplay-wrapper--desktop, .video-autoplay-wrapper--mobile');
    videoWrappers.forEach(wrapper => {
      wrapper.style.opacity = '1';
      wrapper.style.visibility = 'visible';
    });
    
    // Directly set height on the Flickity viewport
    const viewport = wrapper.querySelector('.flickity-viewport');
    if (viewport) {
      viewport.style.height = `${slideHeight}px`;
      viewport.style.minHeight = `${slideHeight}px`;
    }
    
    // Resize Flickity if it exists
    const flickityInstance = Flickity.data(wrapper);
    if (flickityInstance) {
      flickityInstance.resize();
    }
  }
  
  /**
   * Ensure Flickity is properly initialized and configured
   */
  function ensureFlickityInitialized(wrapper, isFirstSlideVideo, liquidAspectRatio) {
    // Try to get existing Flickity instance
    let flickityInstance = Flickity.data(wrapper);
    
    if (flickityInstance) {
      // Configure existing Flickity
      configureFlickity(flickityInstance, wrapper, isFirstSlideVideo, liquidAspectRatio);
    } else {
      // Wait for Flickity to be initialized by the theme
      setTimeout(() => {
        flickityInstance = Flickity.data(wrapper);
        if (flickityInstance) {
          configureFlickity(flickityInstance, wrapper, isFirstSlideVideo, liquidAspectRatio);
        } else {
          // Force initialize if needed
          const firstSlide = wrapper.querySelector('.slideshow__slide:first-child');
          if (firstSlide) {
            const isMobile = window.innerWidth < 750;
            const firstVideo = isMobile ? 
              firstSlide.querySelector('.video-autoplay-wrapper--mobile video') : 
              firstSlide.querySelector('.video-autoplay-wrapper--desktop video');
            
            if ((firstVideo && firstVideo.readyState >= 2) || liquidAspectRatio) {
              let videoRatio;
              if (liquidAspectRatio && parseFloat(liquidAspectRatio) > 0) {
                videoRatio = parseFloat(liquidAspectRatio);
              } else if (firstVideo) {
                videoRatio = firstVideo.videoWidth / firstVideo.videoHeight || 16/9;
              } else {
                videoRatio = 16/9; // Fallback
              }
              
              const slideHeight = window.innerWidth / videoRatio;
              
              // Set explicit height on viewport
              const viewport = wrapper.querySelector('.flickity-viewport');
              if (viewport) {
                viewport.style.height = `${slideHeight}px`;
                viewport.style.minHeight = `${slideHeight}px`;
              }
            }
          }
        }
      }, 500);
    }
  }
  
  /**
   * Configure Flickity for optimal video handling
   */
  function configureFlickity(flickityInstance, wrapper, isFirstSlideVideo, liquidAspectRatio) {
    // Increase drag threshold to prevent accidental swipes
    flickityInstance.options.dragThreshold = 30;
    
    // Update touch action for better mobile scrolling behavior
    if (flickityInstance.slider) {
      flickityInstance.slider.style.touchAction = 'pan-y pinch-zoom';
    }
    
    // Make sure first slide is properly visible if it's a video
    if (isFirstSlideVideo) {
      flickityInstance.select(0, false, true);
      
      // Set explicit height on viewport for the first slide
      const firstSlide = wrapper.querySelector('.slideshow__slide:first-child');
      if (firstSlide) {
        const isMobile = window.innerWidth < 750;
        
        let videoRatio;
        if (liquidAspectRatio && parseFloat(liquidAspectRatio) > 0) {
          videoRatio = parseFloat(liquidAspectRatio);
        } else {
          const firstVideo = isMobile ? 
            firstSlide.querySelector('.video-autoplay-wrapper--mobile video') : 
            firstSlide.querySelector('.video-autoplay-wrapper--desktop video');
          
          if (firstVideo && firstVideo.readyState >= 2) {
            videoRatio = firstVideo.videoWidth / firstVideo.videoHeight || 16/9;
          } else {
            videoRatio = 16/9; // Fallback
          }
        }
        
        const slideHeight = window.innerWidth / videoRatio;
        
        // Set explicit height on viewport
        const viewport = wrapper.querySelector('.flickity-viewport');
        if (viewport) {
          viewport.style.height = `${slideHeight}px`;
          viewport.style.minHeight = `${slideHeight}px`;
        }
      }
    }
    
    // Force resize to ensure correct layout
    flickityInstance.resize();
    
    // Additional resize after videos have had time to load completely
    setTimeout(() => {
      flickityInstance.resize();
      
      // For single-slide videos, disable Flickity dragging
      const isSingleSlide = wrapper.querySelectorAll('.slideshow__slide').length === 1;
      if (isSingleSlide) {
        flickityInstance.options.draggable = false;
        if (flickityInstance.slider) {
          flickityInstance.updateDraggable();
        }
      }
      
      // Final check for viewport height
      const viewport = wrapper.querySelector('.flickity-viewport');
      if (viewport && parseInt(viewport.style.height) < 50) {
        const firstSlide = wrapper.querySelector('.slideshow__slide:first-child');
        if (firstSlide) {
          let defaultHeight;
          if (liquidAspectRatio) {
            defaultHeight = wrapper.clientWidth / parseFloat(liquidAspectRatio);
          } else {
            defaultHeight = 500;
          }
          viewport.style.height = `${defaultHeight}px`;
          viewport.style.minHeight = `${defaultHeight}px`;
          flickityInstance.resize();
        }
      }
    }, 1000);
  }
  
  // Handle window resize to maintain correct video dimensions and device detection
  window.addEventListener('resize', debounce(function() {
    // Re-detect mobile status on resize
    const isMobile = window.innerWidth < 750;
    
    // Update display of mobile/desktop videos
    document.querySelectorAll('.video-autoplay-wrapper--mobile').forEach(el => {
      el.style.display = isMobile ? 'block' : 'none';
    });
    document.querySelectorAll('.video-autoplay-wrapper--desktop').forEach(el => {
      el.style.display = isMobile ? 'none' : 'block';
    });
    
    // Recalculate dimensions
    const slideshowWrappers = document.querySelectorAll('[data-slideshow-wrapper]');
    
    slideshowWrappers.forEach(wrapper => {
      const section = wrapper.closest('.section-slideshow');
      const isUseImageHeight = section.querySelector('.use_image') !== null;
      const videoSlides = wrapper.querySelectorAll('.slideshow__slide.section--video');
      
      // Get the appropriate aspect ratio based on device
      const firstVideoAspect = wrapper.getAttribute('data-first-video-aspect');
      const firstMobileVideoAspect = wrapper.getAttribute('data-first-mobile-video-aspect');
      const liquidAspectRatio = isMobile && firstMobileVideoAspect ? firstMobileVideoAspect : firstVideoAspect;
      
      if (videoSlides.length > 0) {
        videoSlides.forEach(videoSlide => {
          // Get the appropriate videos for current device
          const videos = isMobile ? 
            videoSlide.querySelectorAll('.video-autoplay-wrapper--mobile video') : 
            videoSlide.querySelectorAll('.video-autoplay-wrapper--desktop video');
            
          // Get slide-specific aspect ratios
          const slideVideoAspect = videoSlide.getAttribute('data-video-aspect');
          const slideMobileVideoAspect = videoSlide.getAttribute('data-mobile-video-aspect'); 
          const slideAspectRatio = isMobile && slideMobileVideoAspect ? slideMobileVideoAspect : slideVideoAspect;
          
          if (videos.length > 0) {
            // Use the first video for dimensions with the appropriate aspect ratio
            setVideoDimensions(videos[0], videoSlide, wrapper, isUseImageHeight, slideAspectRatio);
          }
        });
        
        // Resize Flickity if needed
        const flickityInstance = Flickity.data(wrapper);
        if (flickityInstance) {
          flickityInstance.resize();
        }
      }
    });
  }, 250));
  
  // Debounce function to prevent excessive resize calculations
  function debounce(func, wait) {
    let timeout;
    return function() {
      const context = this;
      const args = arguments;
      clearTimeout(timeout);
      timeout = setTimeout(function() {
        func.apply(context, args);
      }, wait);
    };
  }
});
</script>

